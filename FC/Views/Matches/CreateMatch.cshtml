@model FC.Models.Match

@{
    ViewBag.Title = "CreateMatch";
    Layout = "~/Views/Shared/_BootstrapLayout.basic.cshtml";
}

<h2>Створення матчу</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend></legend>
        @Html.HiddenFor(model => model.AddressId)
        <div class="editor-label">
            Назва
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MatchName)
            @Html.ValidationMessageFor(model => model.MatchName)
        </div>

        <div class="editor-label">
            Команда
        </div>
        <div class="editor-field">
           @Html.DropDownListFor(model => model.Team1Id, ViewBag.Teams as SelectList)
           @Html.ValidationMessageFor(model => model.Team.TeamName)
        </div>
        <div class="editor-label">
            Команда
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Team2Id, ViewBag.Teams as SelectList)
           @Html.ValidationMessageFor(model => model.Team1.TeamName)
        </div>

        <div class="editor-label">
            Ліга
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.LeagueId, ViewBag.Leagues as SelectList)
           @Html.ValidationMessageFor(model => model.League.LeagueName)
        </div>
        <div class="editor-label">
            Адреса
        </div>
         <div class="editor-field">
            <div><input name="street-name-input" type="text" id="address-search"/></div>
         </div>
        <div class="editor-label">
            Дата проведення
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <p>
            <input type="submit" value="Створити" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Назад до списку", "ShowAllMatches")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CommonFunctions.js")
@Scripts.Render("~/Scripts/jquery-ui-1.8.24.min.js")
    <script type="text/javascript">
        var AddressId = null;
        $('#address-search').autocomplete({
            source: '/Addresses/GetAddressesToAutocomplete',
            minLength: 1,
            select: function (event, ui) {
                AddressId = ui.item.id;
                $("#AddressId").val(AddressId);
            }
        });
        $('#address-search').on('input', function () {
            if ($('#address-search').val() == "") {
                $("#AddressId").val("");
            }
        });
        $('#Team1Id').change(function() {
            if ($('#Team1Id').val() == $('#Team2Id').val()) {
                $("input").prop('disabled', true);
                alert("команди повинні бути різними!");
            }
            else
            {
                $("input").prop('disabled', false);
            }
        });
        $('#Team2Id').change(function () {
            if ($('#Team1Id').val() == $('#Team2Id').val()) {
                $("input").prop('disabled', true);
                alert("команди повинні бути різними!");
            }
            else {
                $("input").prop('disabled', false);
            }
        });
        $(document).ready(function () {
            var optionValues = [];
            $('#Team2Id option').each(function () {
                optionValues.push($(this).val());
            });
            if (optionValues.length > 1) {
                $('#Team2Id').val(optionValues[1]);
            }
            if ($('#Team1Id').val() == $('#Team2Id').val()) {
                $("input").prop('disabled', true);
                alert("команди повинні бути різними!");
            }
            else {
                $("input").prop('disabled', false);
                
            }
        });
    </script>
}