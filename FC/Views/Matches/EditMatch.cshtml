@using FC.Models
@model FC.Models.Match

@{
    ViewBag.Title = "EditMatch";
    Layout = "~/Views/Shared/_BootstrapLayout.basic.cshtml";
}

<h2>Редагування матчу</h2>
<div id="add-goal-conatiner">
    <h4>Додання голів</h4>
    <input data-val="true" data-val-number="The field player is required." id="playerId" name="playerId" type="hidden" value="" />
    <div class="editor-label">
        Гравець
    </div>
    <div class="editor-field">
        <div><input name="player-search-input" type="text" id="player-search"/></div>
    </div>
    <div class="editor-label">
        Хвилина
    </div>
    <div class="editor-field">
        <div><input name="minute-input" type="text" id="minute"/></div>
    </div>
    <p>
        <button id="add-goal-button">Додати гол</button>
    </p>
</div>
<h4>Голи</h4>
<table id="goals-table" class="table table-striped">
@Html.Partial("GoalsTable",ViewBag.Goals as IEnumerable<Goal>)    
</table>
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Загальні данні</legend>
        @Html.HiddenFor(model => model.MatchId)
        @Html.HiddenFor(model=>model.AddressId)
        <div class="editor-label">
            Назва
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MatchName)
            @Html.ValidationMessageFor(model => model.MatchName)
        </div>
            <div class="editor-label">
                Адреса
            </div>
            <div class="editor-field">
                @Html.TextBox("address-search", (string) ViewBag.currentAddress)
            </div>
            <div class="editor-label">
                Дата проведення
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Date)
                @Html.ValidationMessageFor(model => model.Date)
            </div>
            @Html.HiddenFor(model => model.Team1Id)
            @Html.HiddenFor(model => model.Team2Id)
        <p>
            <input type="submit" value="Зберегти" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Назад до списку", "ShowAllMatches")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CommonFunctions.js")
    @Scripts.Render("~/Scripts/jquery-ui-1.8.24.min.js")
    <script type="text/javascript">
        var AddressId = null;
        $('#address-search').autocomplete({
            source: '/Addresses/GetAddressesToAutocomplete',
            minLength: 1,
            select: function(event, ui) {
                AddressId = ui.item.id;
                $("#AddressId").val(AddressId);
            }
        });
        $('#address-search').on('input', function() {
            if ($('#address-search').val() == "") {
                $("#AddressId").val("");
            }
        });
        $('#address-search').on('input', function() {
            if ($('#address-search').val() == "") {
                $("#AddressId").val("");
            }
        });
      /*  $('#Team1Id').change(function() {
            if ($('#Team1Id').val() == $('#Team2Id').val()) {
                $("input").prop('disabled', true);
                alert("команди повинні бути різними!");
            } else {
                $("input").prop('disabled', false);
            }
        });
        $('#Team2Id').change(function() {
            if ($('#Team1Id').val() == $('#Team2Id').val()) {
                $("input").prop('disabled', true);
                alert("команди повинні бути різними!");
            } else {
                $("input").prop('disabled', false);
            }
        });
        */
        $("#player-search").autocomplete({
            source: function(request, response) {
                $.ajax({
                    url: "/Players/GetPlayersToAutocomplete",
                    dataType: "json",
                    data: {
                        term: request.term,
                        team1Id: $("#Team1Id").val(),
                        team2Id: $("#Team2Id").val(),
                    },
                    success: function(data) {
                        response(data);
                    }
                });
            },
            minLength: 1,
            select: function(event, ui) {
                var playerId = ui.item.id;
                $("#playerId").val(playerId);
            }
        });
       
        $('#add-goal-button').click(function() {
            if ($("#playerId").val() != "") {
                if ($("#minute").val() == "" || (isNormalInteger($("#minute").val()) == true)) {
                    $.ajax({
                        type: "GET",
                        url: "/Goal/AddGoal/",
                        data: {
                            matchId: $('#MatchId').val(),
                            playerId: $('#playerId').val(),
                            minute: $('#minute').val()
                        },
                        success: function(data) {
                            $('#goals-table').html(data);
                        }
                    });
                } else {
                    alert("не правильно введені хвилини");
                }
            } else {
                alert("Вкажіть гравця");
            }
        });

        function isNormalInteger(str) {
            return /^\+?(0|[1-9]\d*)$/.test(str);
        }
      
        $(document).delegate('.delete-goal-button', 'click', function() {
            $.ajax({
                type: "GET",
                url: "/Goal/DeleteGoal/" + $(this).attr("id"),
                success: function (data) {
                   // if (data.success) {
                         $('#goals-table').html(data);
                       // $(this).parent().parent().hide("slow");
                  //  }
                }
            });
        });
    </script>
}